name: "CI"

on:
  push:
  pull_request:

concurrency:
  group: "ci-${{ '{{' }} github.ref {{ '}}' }}"
  cancel-in-progress: true

jobs:
  just:
    name: "Just"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
{% if build_system == "maturin" %}
      - name: "Install the Rust toolchain"
        uses: "dtolnay/rust-toolchain@stable"
        with:
          components: "clippy, rustfmt"
      - name: "Install sccache"
        uses: "mozilla-actions/sccache-action@v0.0.9"
{% endif %}
      - name: "Install development tools"
        uses: "taiki-e/install-action@v2"
        with:
          tool: "just{% if build_system == 'maturin' %}, cargo-audit{% endif %}"
      - name: "Install uv"
        uses: "astral-sh/setup-uv@v5"
        with:
          enable-cache: true
{% if build_system == "maturin" %}
      - name: "Cache Cargo directories"
        uses: "actions/cache@v4"
        with:
{# Directory ~/.cargo/bin/ is populated by taiki-e/install-action, we don't want to cache it #}
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/advisory-db/
            target/
          key: "${{ '{{' }} runner.os {{ '}}' }}-cargo-${{ '{{' }} hashFiles('Cargo.lock') {{ '}}' }}"
          restore-keys: "${{ '{{' }} runner.os {{ '}}' }}-cargo-"
{% endif %}
      - name: "Run Just"
{% if build_system == "maturin" %}
        run: |
{# The package may look present in the cached venv but its extension is missing. Let uv rebuild it. #}
          touch pyproject.toml
          just ci
{% else %}
        run: "just ci"
{% endif %}
{% if build_system == "maturin" %}
        env:
          RUSTC_WRAPPER: "sccache"
          SCCACHE_GHA_ENABLED: "true"
          RUSTFLAGS: "-D warnings"
          UV_LOCKED: "true"
{% endif %}
{% if project_type == "library" %}
      - name: "Upload docs artifact"
        uses: "actions/upload-artifact@v4"
        with:
          name: "docs"
          path: "./docs/_build/html"
          retention-days: 7
{% endif %}
{% if github_pages %}

  pages:
    name: "Pages"
    if: "github.ref == format('refs/heads/{0}', github.event.repository.default_branch)"
    needs: "just"
    permissions:
      pages: "write"
      id-token: "write"
    environment:
      name: "github-pages"
      url: "${{ '{{' }} steps.deployment.outputs.page_url {{ '}}' }}"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Download docs artifact"
        uses: "actions/download-artifact@v4"
        with:
          name: "docs"
          path: "${{ '{{' }} runner.temp {{ '}}' }}/pages/docs"
      - name: "Upload pages artifact"
        uses: "actions/upload-pages-artifact@v3"
        with:
          path: "${{ '{{' }} runner.temp {{ '}}' }}/pages"
      - name: "Deploy pages"
        id: "deployment"
        uses: "actions/deploy-pages@v4"
{% endif %}
